apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgdata
  namespace: liman
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: liman
spec:
  replicas: 1
  selector:
    matchLabels: { app: postgres }
  template:
    metadata:
      labels: { app: postgres }
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: gateway
            - name: POSTGRES_USER
              value: gateway
            - name: POSTGRES_PASSWORD
              value: gateway
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec: { command: ["pg_isready","-U","gateway"] }
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            exec: { command: ["pg_isready","-U","gateway"] }
            initialDelaySeconds: 15
            periodSeconds: 10
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: liman
spec:
  selector: { app: postgres }
  ports:
    - name: db
      port: 5432
      targetPort: 5432
  type: ClusterIP
