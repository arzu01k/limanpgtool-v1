apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: liman
spec:
  replicas: 1
  selector:
    matchLabels: { app: gateway }
  template:
    metadata:
      labels: { app: gateway }
    spec:
      containers:
        - name: gateway
          image: gateway:latest   # ← kendi build ettiğim 
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - { name: SPRING_PROFILES_ACTIVE, value: "dev,api-docs" }

            # DB bağlantıları (senin app-dev.yml ile uyumlu)
            - { name: SPRING_DATASOURCE_URL, value: "jdbc:postgresql://postgres.liman.svc.cluster.local:5432/gateway" }
            - { name: SPRING_DATASOURCE_USERNAME, value: "gateway" }
            - { name: SPRING_DATASOURCE_PASSWORD, value: "gateway" }
            - { name: SPRING_LIQUIBASE_URL, value: "jdbc:postgresql://postgres.liman.svc.cluster.local:5432/gateway" }

            - { name: SPRING_R2DBC_URL, value: "r2dbc:postgresql://postgres.liman.svc.cluster.local:5432/gateway" }
            - { name: SPRING_R2DBC_USERNAME, value: "gateway" }
            - { name: SPRING_R2DBC_PASSWORD, value: "gateway" }

            # Eureka & Config (registry'ye kayıt)
            - { name: JHIPSTER_REGISTRY_PASSWORD, value: "admin" }
            - { name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE, value: "http://admin:admin@jhipster-registry:8761/eureka/" }
            - { name: SPRING_CLOUD_CONFIG_URI, value: "http://admin:admin@jhipster-registry:8761/config" }

          readinessProbe:
            httpGet: { path: /management/health/readiness, port: 8080 }
            initialDelaySeconds: 15
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /management/health/liveness, port: 8080 }
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: liman
spec:
  selector: { app: gateway }
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: NodePort
